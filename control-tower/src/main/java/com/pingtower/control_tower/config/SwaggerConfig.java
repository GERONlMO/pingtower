package com.pingtower.control_tower.config;

import io.swagger.v3.oas.models.Components;
import io.swagger.v3.oas.models.ExternalDocumentation;
import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Contact;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.info.License;
import io.swagger.v3.oas.models.security.SecurityRequirement;
import io.swagger.v3.oas.models.security.SecurityScheme;
import io.swagger.v3.oas.models.servers.Server;
import io.swagger.v3.oas.models.tags.Tag;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.List;

@Configuration
public class SwaggerConfig {

    @Bean
    public OpenAPI customOpenAPI() {
        return new OpenAPI()
                .servers(List.of(
                        new Server()
                                .url("http://localhost:8082")
                                .description("üèóÔ∏è Direct Control Tower Access")
                                .variables(null),
                        new Server()
                                .url("http://localhost:8080")
                                .description("üö™ Via API Gateway (Recommended)")
                                .variables(null)
                ))
                .info(new Info()
                        .title("üèóÔ∏è PingTower Control Tower API")
                        .version("1.0.0")
                        .description("""
                                # üéØ Control Tower Service
                                
                                **Control Tower** —è–≤–ª—è–µ—Ç—Å—è —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ PingTower.
                                
                                ## üöÄ –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
                                - üè¢ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞–º–∏** - CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏—Ä—É–µ–º—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
                                - üîç **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏** - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ HTTP, Browser –∏ SSL –ø—Ä–æ–≤–µ—Ä–æ–∫
                                - üìä **Real-time –¥–∞—à–±–æ—Ä–¥** - WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è live –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
                                - üìà **–ê–Ω–∞–ª–∏—Ç–∏–∫–∞** - –∞–≥—Ä–µ–≥–∞—Ü–∏—è –º–µ—Ç—Ä–∏–∫ –∏–∑ ClickHouse
                                - üö® **–°–∏—Å—Ç–µ–º–∞ –∞–ª–µ—Ä—Ç–æ–≤** - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram –ø—Ä–∏ —Å–±–æ—è—Ö
                                
                                ## üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
                                –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ API —á–µ—Ä–µ–∑ Gateway —Ç—Ä–µ–±—É–µ—Ç—Å—è JWT —Ç–æ–∫–µ–Ω:
                                1. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ `/auth/login` –≤ Auth Service
                                2. –î–æ–±–∞–≤—å—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ `Authorization: Bearer <token>`
                                
                                ## üåê WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
                                - **Endpoint**: `/ws/dashboard`
                                - **–ü—Ä–æ—Ç–æ–∫–æ–ª**: STOMP over SockJS
                                - **–ü–æ–¥–ø–∏—Å–∫–∏**: `/app/dashboard`, `/topic/dashboard`
                                
                                ## üìö –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
                                - [–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å–∏—Å—Ç–µ–º—ã](https://github.com/pingtower/docs/architecture.md)
                                - [–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è](https://github.com/pingtower/docs/examples.md)
                                """)
                        .termsOfService("https://pingtower.com/terms")
                        .contact(new Contact()
                                .name("üèóÔ∏è PingTower Development Team")
                                .email("dev@pingtower.com")
                                .url("https://github.com/pingtower/pingtower"))
                        .license(new License()
                                .name("MIT License")
                                .url("https://opensource.org/licenses/MIT")))
                .externalDocs(new ExternalDocumentation()
                        .description("üìñ PingTower Documentation")
                        .url("https://docs.pingtower.com"))
                .tags(List.of(
                        new Tag()
                                .name("Services")
                                .description("üè¢ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞–º–∏**\n\nCRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏—Ä—É–µ–º—ã—Ö –≤–µ–±-—Å–µ—Ä–≤–∏—Å–æ–≤. " +
                                           "–ö–∞–∂–¥—ã–π —Å–µ—Ä–≤–∏—Å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –≤–µ–±-—Ä–µ—Å—É—Ä—Å, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å."),
                        new Tag()
                                .name("Checks")
                                .description("üîç **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏**\n\n–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –ø—Ä–æ–≤–µ—Ä–æ–∫: " +
                                           "HTTP, Browser automation, SSL certificates. –ö–∞–∂–¥–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é."),
                        new Tag()
                                .name("Dashboard")
                                .description("üìä **Real-time –¥–∞—à–±–æ—Ä–¥**\n\nWebSocket API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–∞—à–±–æ—Ä–¥–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏. " +
                                           "–í–∫–ª—é—á–∞–µ—Ç –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, —Å—Ç–∞—Ç—É—Å—ã —Å–µ—Ä–≤–∏—Å–æ–≤ –∏ –∞–ª–µ—Ä—Ç—ã."),
                        new Tag()
                                .name("Analytics")
                                .description("üìà **–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –º–µ—Ç—Ä–∏–∫–∏**\n\n–ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ ClickHouse: uptime, " +
                                           "response time, error rates –∏ –¥—Ä—É–≥–∏–µ –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.")
                ))
                .components(new Components()
                        .addSecuritySchemes("bearerAuth", new SecurityScheme()
                                .type(SecurityScheme.Type.HTTP)
                                .scheme("bearer")
                                .bearerFormat("JWT")
                                .description("üîê JWT —Ç–æ–∫–µ–Ω –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ Auth Service.")))
                .addSecurityItem(new SecurityRequirement().addList("bearerAuth"));
    }
}
