spring:
  application:
    name: control-tower
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5433/pingtower}
    username: ${SPRING_DATASOURCE_USERNAME:pinguser}
    password: ${SPRING_DATASOURCE_PASSWORD:pingpassword}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update # In production, you should use a migration tool like Liquibase or Flyway
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: control-tower-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.use.type.headers: "true"
        spring.json.type.mapping: "com.pingtower.ping_worker.kafka.ServiceStatusUpdateMessage:com.pingtower.control_tower.kafka.ServiceStatusUpdateMessage"

clickhouse:
  datasource:
    url: ${SPRING_CLICKHOUSE_URL:jdbc:clickhouse://localhost:8123/pingtower}
    username: ${SPRING_CLICKHOUSE_USERNAME:chuser}
    password: ${SPRING_CLICKHOUSE_PASSWORD:chpassword}
    driver-class-name: com.clickhouse.jdbc.ClickHouseDriver

server:
  port: 8081 # Using a different port to avoid conflicts with other services

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
